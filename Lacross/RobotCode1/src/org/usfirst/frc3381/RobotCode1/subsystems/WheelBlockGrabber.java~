// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc3381.RobotCode1.subsystems;

import org.usfirst.frc3381.RobotCode1.RobotMap;
import org.usfirst.frc3381.RobotCode1.commands.*;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.Joystick;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.DigitalInput;
import edu.wpi.first.wpilibj.DoubleSolenoid;
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class WheelBlockGrabber extends Subsystem {
	
	public Boolean wrist;
	public Integer count;
	public Integer setCount;

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private final SpeedController sparkBlockGrabberRight = RobotMap.wheelBlockGrabberSparkBlockGrabberRight;
    private final SpeedController sparkBlockGrabberLeft = RobotMap.wheelBlockGrabberSparkBlockGrabberLeft;
    private final SpeedController sparkWrist = RobotMap.wheelBlockGrabberSparkWrist;
    private final DigitalInput digitalInputWrist = RobotMap.wheelBlockGrabberDigitalInputWrist;
    private final DoubleSolenoid doubleSolenoidOpenClose = RobotMap.wheelBlockGrabberDoubleSolenoidOpenClose;
    private final DigitalInput limitSwitchWrist = RobotMap.wheelBlockGrabberLimitSwitchWrist;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new CommandBlockRelease());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.
    
    
    public void grab(){
    	sparkBlockGrabberRight.set(-0.75);
    	sparkBlockGrabberLeft.set(0.65);
    }
    
    
    public void release(double speed){
    	sparkBlockGrabberRight.set(speed);
    	sparkBlockGrabberLeft.set(-speed);
    }
    
    // Sets motor power to zero
    public void setToZero(){
    	sparkBlockGrabberRight.set(0);
    	sparkBlockGrabberLeft.set(0);
    }
    
    // Sets motor power to 20 percent to keep the block in the manipulator
    public void keep(){
    	sparkBlockGrabberRight.set(-0.20);
    	sparkBlockGrabberLeft.set(0.20);
    }
    
    // Sets motor power to tilt the wrist up
    public void wristUp() {
    	sparkWrist.set(-1.0);
    }
    
    // Sets motor power to tilt the wrist down
    public void wristDown() {
    	sparkWrist.set(1.0);
    }
    
    public void wristManual(Double speed) {
    	sparkWrist.set(speed);
    }
    
    // Sets motor power to zero
    public void wristPowZero() {
    	sparkWrist.set(0.0);
    }
    
    // Gets the current boolean state of the wrist hall
    public Boolean getWristPosition() {
    	return digitalInputWrist.get();
    }
    
    // Shit to high gear
    public void open() {
    	doubleSolenoidOpenClose.set(DoubleSolenoid.Value.kReverse);
    }
    
    // Shift to low gear
    public void close() {
    	doubleSolenoidOpenClose.set(DoubleSolenoid.Value.kForward);
    }

}

